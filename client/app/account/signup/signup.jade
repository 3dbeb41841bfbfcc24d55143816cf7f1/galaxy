.container-fluid
  .row
    .col-sm-12
      h1 Sign up
    .col-sm-12
      form.form(name='form', ng-submit='vm.register(form)', novalidate='')
        .col-sm-6
          .form-group(ng-class='{ "has-success": form.name.$valid && vm.submitted,\
          "has-error": form.name.$invalid && vm.submitted }')
            label Name
            input.form-control(type='text', name='name', ng-model='vm.user.name', required='')
            p.help-block(ng-show='form.name.$error.required && vm.submitted')
              | A name is required
        .col-sm-6
          .form-group(ng-class='{ "has-success": form.email.$valid && vm.submitted,\
          "has-error": form.email.$invalid && vm.submitted }')
            label Email
            input.form-control(type='email', name='email', ng-model='vm.user.email', required='', mongoose-error='')
            p.help-block(ng-show='form.email.$error.email && vm.submitted')
              | Doesn't look like a valid email.
            p.help-block(ng-show='form.email.$error.required && vm.submitted')
              | What's your email address?
            p.help-block(ng-show='form.email.$error.mongoose')
              | {{ vm.errors.email }}

        .col-sm-6
          .form-group(ng-class='{ "has-success": form.password.$valid && vm.submitted,\
          "has-error": form.password.$invalid && vm.submitted }')
            label Password
            input.form-control(type='password'
              name='password'
              ng-model='vm.user.password'
              mongoose-error=''
              ng-minlength='3', required='')

            p.help-block(ng-show='(form.password.$error.minlength || form.password.$error.required) && vm.submitted')
              | Password must be at least 3 characters.
            p.help-block(ng-show='form.password.$error.mongoose')
              | {{ vm.errors.password }}

        .col-sm-6
          .form-group(ng-class='{ "has-success": form.confirmPassword.$valid && vm.submitted,\
          "has-error": form.confirmPassword.$invalid && vm.submitted }')
            label Confirm Password
            input.form-control(type='password'
              name='confirmPassword'
              ng-model='vm.user.confirmPassword'
              match="vm.user.password"
              ng-minlength='3', required='')
            p.help-block(ng-show='form.confirmPassword.$error.match && vm.submitted')
              | Passwords must match.

        .form-group(ng-class='{ "has-success": form.role.$valid && vm.submitted,\
        "has-error": form.role.$invalid && vm.submitted }',
        ng-init="vm.user.role='student'")
          label Role
          br
          .radio-inline
            label
              input(type='radio',
                name='user[role]',
                value='student',
                ng-model='vm.user.role',
                required='')
              | Student
          .radio-inline
            label
              input(type='radio',
                name='user[role]',
                value='instructor',
                ng-model='vm.user.role',
                required='')
              | Instructor
          .radio-inline
            label
              input(type='radio',
                name='user[role]',
                value='Producer',
                ng-model='vm.user.role',
                required='')
              | Producer
        div
          button.btn.btn-primary.btn-lg.btn-register(type='submit')
            | Sign up
          = ' '
          a.btn.btn-default.btn-lg.btn-login(ui-sref='login')
            | Login
        hr

        .row
          .col-sm-4.col-md-3
            oauth-buttons(classes='btn-block')

  hr
